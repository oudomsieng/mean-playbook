---

- name: Checking if ansible_distribution_major_version and ansible_distribution are not defined
  fail:
    msg: "Ansible distribution or ansible distribution version are not defined"
  when: ansible_distribution_major_version is not defined or ansible_distribution is not defined

- name: Checking if target server is not CentOS 7
  fail:
    msg: "This role can only be run on CentOS 7 servers"
  when: ansible_distribution != "CentOS" or (ansible_distribution == "CentOS" and ansible_distribution_major_version != "7")

- name: Testing input vars
  assert: { that: "{{ item }} is defined" }
  with_items:
      - nginx_log_path
      - application_directory
      - ihm_nexus_url
      - nodejs_api_ip
      - nodejs_api_port
      - angular_ihm_ip
      - infra_filename
  when: nginx_deploy_config

- include: create-volume.yml

- name: Adding CentOS EPEL repository
  yum:
    name: "{{epel_pkg_name}}"
    state: present
  become: yes
  
- name: Configuring nodejs repo
  template:
    src: nodesource-el.repo.j2
    dest: /etc/yum.repos.d/nodesource-el.repo
  become: yes

- name: Installing nodejs
  yum:
    name: nodejs
    state: present
  become: yes

- name: Installing Nginx
  yum:
    name: "{{nginx_pkg_name}}"
    state: present
  become: yes

- name: Configuring Nginx
  template:
    src: nginx.conf.j2
    dest: "{{fileconf_path}}"
  become: yes

- name: Create log path if not exist
  file:
    path: "{{nginx_log_path }}"
    state: directory
    mode: 755
  become: yes

- name: Configuring Nginx service
  template:
    src: nginx.service.j2
    dest: "{{fileservice_path}}"
  become: yes

- name: Reloading systemctl
  command: systemctl daemon-reload
  become: yes

- name: Logrotate configuration file
  template:
    src: logrotate.nginx.j2
    dest: /etc/logrotate.d/nginx
  become: yes

- name: Delete working directory
  file:
    path: "{{application_dist_path }}"
    state: absent
  become: yes

- name: Creating working directory to build app
  file:
    path: "{{application_dist_path }}"
    owner: root
    group: root
    state: directory
    mode: 0777
  become: yes

- name: download ihm
  get_url:
    url: {{ ihm_nexus_url }}
    dest: "{{ application_dist_path }}/ihm.zip"
    mode: 0777

- name: unzip ihm
  unarchive:
    src: "{{ application_dist_path }}/ihm.zip"
    dest: {{ application_dist_path }}
    remote_src: yes

- name: Configuring Infrastructure for app
  template:
    src: "{{ infra_filename }}.j2"
    dest: "{{application_dist_path }}/infra.js"

- name: Starting Nginx service
  service:
    name: nginx
    state: restarted
    enabled: yes
  become: yes
